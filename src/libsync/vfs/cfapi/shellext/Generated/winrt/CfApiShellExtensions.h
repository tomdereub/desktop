// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.220110.5

#pragma once
#ifndef WINRT_CfApiShellExtensions_H
#define WINRT_CfApiShellExtensions_H
#include "winrt/base.h"
static_assert(winrt::check_version(CPPWINRT_VERSION, "2.0.220110.5"), "Mismatched C++/WinRT headers.");
#define CPPWINRT_VERSION "2.0.220110.5"
#include "winrt/impl/Windows.Storage.Provider.2.h"
#include "winrt/impl/CfApiShellExtensions.2.h"
namespace winrt::impl
{
}
WINRT_EXPORT namespace winrt::CfApiShellExtensions
{
    inline CustomStateProvider::CustomStateProvider() :
        CustomStateProvider(impl::call_factory_cast<CustomStateProvider(*)(winrt::Windows::Foundation::IActivationFactory const&), CustomStateProvider>([](winrt::Windows::Foundation::IActivationFactory const& f) { return f.template ActivateInstance<CustomStateProvider>(); }))
    {
    }
}
namespace std
{
#ifndef WINRT_LEAN_AND_MEAN
    template<> struct hash<winrt::CfApiShellExtensions::CustomStateProvider> : winrt::impl::hash_base {};
#endif
#ifdef __cpp_lib_format
#endif
}
#endif
